//This file is generated by csv_to_struct.py
typedef struct packed {
  bit [31:00] ELBTL; // Expected Logical Block Tags Lower 
} S_VERIFY___COMMAND_DWORD_14; //nvme spec page 053


typedef struct packed {
  bit [31:16] ELBATM; // Expected Logical Block Application Tag Mask 
  bit [15:00] ELBAT; // Expected Logical Block Application Tag 
} S_VERIFY___COMMAND_DWORD_15; //nvme spec page 053


typedef struct packed {
  bit [63:00] MPTR; // Metadata Pointer 
} S_WRITE___METADATA_POINTER; //nvme spec page 053


typedef struct packed {
  bit [63:00] SLBA; // Starting LBA 
} S_WRITE___COMMAND_DWORD_10_AND_COMMAND_DWORD_11; //nvme spec page 054


typedef struct packed {
  bit [31:31] LR; // Limited Retry 
  bit [30:30] FUA; // Force Unit Access 
  bit [29:26] PRINFO; // Protection Information 
  bit [25:25] RSVD0; //
  bit [24:24] STC; // Storage Tag Check 
  bit [23:20] DTYPE; // Directive Type 
  bit [19:16] CETYPE; // Command Extension Type 
  bit [15:00] NLB; // Number of Logical Blocks 
} S_WRITE___COMMAND_DWORD_12; //nvme spec page 054


typedef struct packed {
  bit [31:16] DSPEC; // Directive Specific 
  bit [15:08] RSVD0; //
  bit [07:00] DSM; // Dataset Management 
} S_WRITE___COMMAND_DWORD_13_IF_CETYPE_IS_CLEARED_TO_0H; //nvme spec page 054


typedef struct packed {
  bit [63:48] RSVD0; //
  bit [47:00] LBTU; // Logical Block Tags Upper 
} S_WRITE___COMMAND_DWORD_2_AND_DWORD_3; //nvme spec page 054


typedef struct packed {
  bit [127:00] DPTR; // Data Pointer 
} S_WRITE___DATA_POINTER; //nvme spec page 054


typedef struct packed {
  bit [31:16] DSPEC; // Directive Specific 
  bit [15:00] CEV; // Command Extension Value 
} S_WRITE___COMMAND_DWORD_13_IF_CETYPE_IS_NON_ZERO; //nvme spec page 055


typedef struct packed {
  bit [31:00] LBTL; // Logical Block Tags Lower 
} S_WRITE___COMMAND_DWORD_14; //nvme spec page 055


typedef struct packed {
  bit [31:16] LBATM; // Logical Block Application Tag Mask 
  bit [15:00] LBAT; // Logical Block Application Tag 
} S_WRITE___COMMAND_DWORD_15; //nvme spec page 055


